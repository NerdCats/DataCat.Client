{"version":3,"sources":["app/dashboard/dashboard-event.service.ts"],"names":[],"mappings":";;;;;;;AAAA,sCAA2C;AAC3C,wCAAuC;AAQvC,IAAa,qBAAqB;IADlC;QAEI,iEAAiE;QAC1D,0BAAqB,GAAG,IAAI,iBAAO,EAA2B,CAAC;QAEtE,wEAAwE;QACjE,sBAAiB,GAAG,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,CAAC;IAKzE,CAAC;IAHU,gDAAgB,GAAvB,UAAwB,KAA8B;QAClD,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3C,CAAC;IACL,4BAAC;AAAD,CAVA,AAUC,IAAA;AAVY,qBAAqB;IADjC,iBAAU,EAAE;GACA,qBAAqB,CAUjC;AAVY,sDAAqB;AAYrB,QAAA,mBAAmB,GAAU;IACtC,EAAE,OAAO,EAAE,qBAAqB,EAAE,QAAQ,EAAE,qBAAqB,EAAE;CACtE,CAAC","file":"dashboard-event.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\nexport interface IDashboardComponetEvent {\r\n    Event: string;\r\n    Name: string;\r\n}\r\n\r\n@Injectable()\r\nexport class DashboardEventService {\r\n    // TODO: Need to make sure the component updates are standardized\r\n    public componentUpdateSource = new Subject<IDashboardComponetEvent>();\r\n\r\n    /** The stream to publish component update stream to other components */\r\n    public componentUpdated$ = this.componentUpdateSource.asObservable();\r\n\r\n    public componentUpdated(value: IDashboardComponetEvent) {\r\n        this.componentUpdateSource.next(value);\r\n    }\r\n}\r\n\r\nexport const DASHBOARD_PROVIDERS: any[] = [\r\n    { provide: DashboardEventService, useClass: DashboardEventService }\r\n];\r\n"]}